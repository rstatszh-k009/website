{
  "hash": "3df453937fc4d333175f25f8b516c286",
  "result": {
    "engine": "knitr",
    "markdown": "---\nTitel: \"Interaktion mit GitHub\"\n---\n\n\n\n## Schritt 1: Klone ein Repository\n\n1. Öffne github.com in deinem Browser.\n\n2. Navigiere zur GitHub-Organisation für den Kurs: [github.com/rstatszh-k009](https://github.com/rstatszh-k009)\n\n3. Finde das Repository git-configuration-BENUTZERNAME, das mit deinem GitHub-Benutzernamen endet, und öffne es.\n\n4. Klicke auf die grüne Schaltfläche \"Code\".\n\n5. Kopiere die HTTPS-URL in deine Zwischenablage.\n\n6. Öffne den rstatszh-k009 Arbeitsbereich (Workspace) auf [posit.cloud](https://posit.cloud/spaces/543494/content/all?sort=name_asc)\n\n7. Klicke auf \"New Project\" > \"New Project from Git Repository\"\n\n8. Füge die HTTPS-URL von GitHub in das Feld \"URL of your Git Repository\" ein.\n\n9. Warte, bis das Projekt bereitgestellt wurde.\n\n10. Fahre mit dem nächsten Schritt fort.\n\n## Schritt 2: Stelle dich git vor\n\n1. Falls das Projekt aus Schritt 1 geschlossen wurde, öffne das Projekt git-configuration-BENUTZERNAME in Posit Cloud, das mit deinem GitHub-Benutzernamen endet.\n\n2. Öffne die Datei git-configuration.qmd im Fenster unten rechts in RStudio.\n\n3. Bearbeite den Code-Abschnitt unter \"Git configuration details\" und ersetze die Platzhalter durch deinen Namen und \ndeine E-Mail-Adresse (anhand dieser Daten wird Git dich identifizieren, wenn du Änderungen am Repository vornimmst).\n\n4. Render das Dokument.\n\n5. Behalte das Projekt git-configuration-BENUTZERNAME in RStudio geöffnet. Fahre mit dem nächsten Schritt fort\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(usethis)\n\n# Ersetze deinen Namen und deine E-Mail-Adresse durch deine Angaben. Die Anführungszeichen \"\" nicht löschen.\nuse_git_config(user.name = \"Dein Name\", user.email = \"Deine E-Mail-Adresse\")\n```\n:::\n\n\n\n## Schritt 3: Übertrage deine Änderungen und speichere sie\n\n1. Navigiere zum \"Git\" Bereich im Fenster oben rechts in RStudio.\n\n2. Aktiviere das Kontrollkästchen neben der Datei git-configuration.qmd, um sie für den Commit vorzubereiten.\n\n3. Klicke auf die Schaltfläche \"Commit\".\n\n4. Gib die Commit-Nachricht \"erster Commit\" in das Feld \"Commit Message\" ein.\n\n5. Klicke auf die Schaltfläche \"Commit\".\n\n6. Klicke auf die Schaltfläche \"Push\".\n\n7. Gib deinen GitHub-Benutzernamen und [deinen GitHub Personal Access Token (PAT)]{.highlight-yellow} in die Felder \"Benutzername\" und [\"Password\"]{.highlight-yellow} ein.\n\n::: callout-important\n## Verwende nicht dein GitHub-Passwort\n\nDu musst GitHub Personal Access Token (PAT) eingeben, den du in der Vorbereitung auf den Kurs erstellt hast um deine Änderungen zurück an GitHub zu übertragen.\n:::\n\n## Schritt 4: Eröffne ein Issue auf GitHub\n\n1. Öffne [github.com] (https://github.com/) in deinem Browser.\n\n2. Navigiere zur GitHub-Organisation für den Kurs.\n\n3. Finde das Repository git-configuration-BENUTZERNAME, das mit deinem GitHub-Benutzernamen endet.\n\n4. Klicke auf die Schaltfläche \"Issues\".\n\n5. Klicke auf die grüne Schaltfläche \"New issue\".\n\n6. Schreibe in das Feld \"Title\": \"Git Konfiguration abgeschlossen\".\n\n7. Markiere im Feld \"Leave a comment\" den Kursleiter mit @larnsce und hiterlasse eine Nachricht oder offene Frage.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}